@page "/students"
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager

<MatCard>
    <MatDialogTitle>Students</MatDialogTitle>
</MatCard>

<MatBlazor.MatTable Items="@ColUsers" Class="mat-elevation-z5">
    <MatTableHeader>
        <th>ID</th>
        <th>UserName</th>
        <th>Email</th>
    </MatTableHeader>
    <MatTableRow>
        <td>@context.Id</td>
        <td>@context.UserName</td>
        <td>@context.Email</td>
    </MatTableRow>
</MatBlazor.MatTable>

@*<MatTable Items="@ColUsers" Class="mat-elevation-z5">
        <MatTableHeader>
            <th>ID</th>
            <th>UserName</th>
            <th>Email</th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.Id</td>
            <td>@context.UserName</td>
            <td>@context.Email</td>
        </MatTableRow>
    </MatTable>*@

@code {
    List<IdentityUser> ColUsers = new List<IdentityUser>();
    string strError = "";

    protected override async Task OnInitializedAsync()
    {
        GetUsers();
    }

    public void GetUsers()
    {
        // clear any error messages
        strError = "";
        // Collection to hold users
        ColUsers = new List<IdentityUser>();
        // get users from _UserManager
        var user = _UserManager.Users.Select(x => new IdentityUser
        {
            Id = x.Id,
            UserName = x.UserName,
            Email = x.Email,
            PasswordHash = "*****"
        });
        foreach (var item in user)
        {
            ColUsers.Add(item);
        }
    }

}
